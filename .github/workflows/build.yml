name: sampleapi_ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
   
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Install Swagger DLLs
      run: dotnet tool install --version 5.6.2 Swashbuckle.AspNetCore.Cli
    - name: Swagger 
      run: dotnet swagger tofile --output swagger.json SampleAPI/bin/Release/netcoreapp3.1/SampleAPI.dll v1
    - name: Run Spectral
      uses: stoplightio/spectral-action@v0.7.0
      with:
        file_glob: './swagger.json'
    - name: Publish
      run: dotnet publish --no-build -c Release -o dotnetcorewebapp 
    - name: Zip
      uses: thedoctor0/zip-release@master
      with: 
        filename: dotnetcorewebapp.zip
        directory: 'dotnetcorewebapp' 
    - name: Publish Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dotnetcorewebapp
        path: '**/dotnetcorewebapp.zip'

  deploy_to_DEV:
    name: Deploy DEV
    runs-on: ubuntu-latest
    environment:
      name: DEV

    needs: [build]

    steps:
    - name: download sampleapi
      uses: actions/download-artifact@v2
      with:
        name: dotnetcorewebapp
    - name: Display structure of downloaded files
      run: ls -R

  deploy_to_TEST:
    name: Deploy TEST
    runs-on: ubuntu-latest
    environment:
      name: TEST

    needs: [build]

    steps:
    - name: download sampleapi
      uses: actions/download-artifact@v2
      with:
        name: dotnetcorewebapp
    - name: Display structure of downloaded files
      run: ls -R

  deploy_to_PROD:
    name: Deploy PROD
    runs-on: ubuntu-latest
    environment:
      name: PROD

    needs: [build]

    steps:
    - name: download sampleapi
      uses: actions/download-artifact@v2
      with:
        name: dotnetcorewebapp
    - name: Display structure of downloaded files
      run: ls -R